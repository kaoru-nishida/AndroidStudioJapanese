#AndroidStudio3.1 \u65E5\u672C\u8A9E\u5316\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8
#Tue Nov 21 21:52:19 JST 2017
action.analysis.noun=分析
action.analyze.verb=分析する
action.analyzing.cyclic.dependencies.in.scope={0}の巡回依存関係
action.backward.dependency.analysis=後方依存性分析
action.close.dependency.description=依存関係ビューアを閉じる
action.cyclic.dependency.title=循環依存性分析
action.edit.rules=ルールの編集
action.edit.rules.description=依存関係ルールの編集
action.flatten.packages=フラットパネルパッケージ
action.forward.dependency.analysis=依存関係分析
action.group.by.scope.type=スコープタイプ別グループ
action.group.by.scope.type.description=スコープタイプ別グループ（制作、テスト、ライブラリ）
action.module.dependencies.direction=後方依存（用途）
action.module.dependencies.tests=テストの依存関係を含める
action.rerun.dependency=依存関係分析を再実行する
action.select.in.left.tree=左ツリーで選択
action.select.in.left.tree.description=左ツリーで選択（依存関係をブラウズするため）
action.show.files=ファイルを表示する
action.show.files.description=ファイルの表示/非表示
action.show.illegals.only=違法行為を表示する
action.show.illegals.only.description=不正な依存関係を持つファイルのみを表示する
action.show.modules=モジュールを表示する
action.show.modules.description=モジュールの表示/非表示
analysis.scope.title={0}スコープ
analyzing.project=プロジェクトの分析
backward.dependencies.progress.text=後方依存性の分析
backward.dependencies.toolwindow.title={0}の後方依存関係
backward.dependencies.usage.view.initial.text=右ツリーで検索する場所と左ツリーで検索する項目を選択します。
backward.dependencies.usage.view.root.node.text=右ツリーのスコープ選択での左ツリースコープ選択の使用
checking.class.files=クラスファイルのチェック
cyclic.dependencies.progress.text=ビルド依存グラフ
cyclic.dependencies.scope.dialog.module.button={0}モジュール '' {1} ''
cyclic.dependencies.scope.dialog.project.button={0}プロジェクト全体
cyclic.dependencies.scope.dialog.title={0}スコープを指定する
cyclic.dependencies.tree.cycle.node.text=サイクル
cyclic.dependencies.usage.view.initial.text=左ツリーから解析するパッケージを選択
cyclic.dependencies.usage.view.root.node.text=パッケージ '' {0} 'のパッケージ' '{1}' 'での使用
dependencies.in.imports.message=インポートの依存関係は無視されました。
dependencies.libraries.node.text=図書館
dependencies.tree.node.default.package.abbreviation=<default package>
dependency.configurable.allow.table.column1=の使用を許可する
dependency.configurable.allow.table.column2=のみで
dependency.configurable.deny.table.column1=使用を拒否する
dependency.configurable.deny.table.column2=に
dependency.configurable.display.name=依存関係の検証
error.package.set.pattern.expectations=期待されるパッケージパターン
error.package.set.position.parsing.error={1}の位置に{0}
error.package.set.rparen.expected='）'予想
error.package.set.token.expectations=予期しない '' {0} ''
find.dependencies.progress.text={0}での使用状況の検索
forward.dependencies.usage.view.initial.text=左ツリーで検索する場所と右ツリーで検索する項目を選択します。
forward.dependencies.usage.view.root.node.text=左ツリースコープ選択での右ツリースコープ選択の使用
mark.dependency.illegal.text=違法とする
module.dependencies.cycle.node.text=サイクル{0}
module.dependencies.scope.dialog.module.button=モジュール '' {0} ''を検査する
module.dependencies.scope.dialog.project.button=プロジェクト全体を検査する
module.dependencies.scope.dialog.title=分析スコープの指定
no.dependencies.found.message={1}の{0}の依存関係は見つかりませんでした。
package.dependencies.build.process.title=スキャンパッケージ
package.dependencies.build.progress.text=スキャンパッケージ
package.dependencies.library.node.text=ライブラリクラス
package.dependencies.node.items.count={0, choice, 1\#1 entry|2\#{0, number} entries}
package.dependencies.on.toolwindow.title={1}への{0}の依存関係
package.dependencies.production.node.text=プロダクションクラス
package.dependencies.progress.text=パッケージの依存関係の分析
package.dependencies.progress.title=依存関係の分析
package.dependencies.test.node.text=テストクラス
package.dependencies.toolwindow.title={0}の依存関係
project.is.out.of.date=プロジェクトが期限切れです
recompile.confirmation.message=プロジェクトのクラスファイルは古くなっています。 
scanning.scope.progress.title=スキャン範囲...
scope.directory=ディレクトリ '' {0} ''
scope.display.name.allow.scope=スコープ '' {0} 'の使用をスコープ' '{1}'で許可します
scope.display.name.deny.scope=範囲 '' {0} 'のスコープ' '{1}' 'での使用を拒否します
scope.file=ファイル '' {0} ''
scope.module.list={1, choice, 1\#Module|2\#Modules} {0}
scope.option.custom=カスタムスコープ
scope.option.include.test.sources=テストソースを含める
scope.option.module=モジュール '' {0} ''
scope.option.module.with.mnemonic=モジュール '' {0} ''
scope.option.uncommitted.files=コミットされていないファイル
scope.option.uncommitted.files.all.changelists.choice=すべて
scope.option.whole.project=プロジェクト全体
scope.package=パッケージ{0}
scope.project=プロジェクト '' {0} ''
scope.selected.files=選択したファイル
scope.virtual.files=選択
skip.import.statements.checkbox.title=インポート文をスキップする
specify.analysis.scope={0}スコープを指定する
status.bar.no.rule.violation.message=ルール違反はありません
status.bar.rule.violation.message=The following rule{0, choice, 1\# is|2\#s are} violated\: {1}
unknown.node.text=<unknown>
update.module.tree.progress.text=処理モジュール '' {0} ''サイクル
update.module.tree.progress.title=モジュールツリーの更新
usage.view.canceled=キャンセル
