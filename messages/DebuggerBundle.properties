#AndroidStudio3.1 \u65E5\u672C\u8A9E\u5316\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8
#Tue Nov 21 21:52:20 JST 2017
action.add.field.watchpoint.text=フィールドウォッチポイントを追加
action.auto.variables.mode=自動変数モード
action.auto.variables.mode.description=実行ポイントの近くで使用される変数のみを表示する
action.disable.text=無効にする
action.enable.text=有効にする
action.evaluate.expression.dialog.switch.mode.description=コードフラグメントモード
action.evaluate.statement.dialog.switch.mode.description=表現モード
action.interrupt.thread.text=割り込み
action.kill.process.description=デバッグされたアプリケーションを強制終了する
action.kill.process.text=キルプロセス
action.maximizeContent.text=
action.remove.text=削除する
action.remove.watch.text={0,choice, 1\#Remove Watch|2\#Remove Watches}
action.resume.thread.text.resume=履歴書
action.resume.thread.text.unfreeze=不凍液
action.show.watches.description=「時計」パネルを表示または非表示にする
action.show.watches.text.hide=時計を隠す
action.show.watches.text.show=時計を見る
action.watch.method.return.value.description=最後に実行されたメソッドの戻り値の監視を有効にします。
action.watches.method.return.value.disable=メソッドの戻り値の監視を停止する
action.watches.method.return.value.enable=メソッドの戻り値を表示する
action.watches.method.return.value.unavailable.reason=ターゲットVMでは機能がサポートされていません
active.tooltip.suggestion=オブジェクトツリーを表示するにはここをクリック
active.tooltip.title={0}の評価
add.exception.breakpoint.classchooser.title=例外クラスを入力
add.field.breakpoint.dialog.classchooser.title=フィールドのクラスを選択
add.field.breakpoint.dialog.field.chooser.title={0,choice, 0\#Class has no fields|1\#Select Field}
add.field.breakpoint.dialog.title=フィールドウォッチポイントを追加
add.instance.filter.dialog.error.numeric.value.expected=インスタンスIDは 'long'型の数値でなければなりません
add.instance.filter.dialog.prompt=インスタンスIDを入力：
add.instance.filter.dialog.title=インスタンスフィルタの追加
async.stacktraces.configurable.display.name=非同期スタックトレース
breakpoint.any.exception.display.name=すべての例外
breakpoint.exception.breakpoint.display.name='' {0} ''
breakpoint.log.message="{0}に達しました"
breakpoint.manager.action.view.breakpoints.text=ブレークポイントの表示
breakpoint.properties.panel.option.catch.class.filters=キャッチクラスフィルタ：
breakpoint.properties.panel.option.class.filters=クラスフィルタ：
breakpoint.properties.panel.option.condition=調子：
breakpoint.properties.panel.option.dependency.type.lable=ブレークポイントがヒットした後：
breakpoint.properties.panel.option.depends.disable.again=もう一度無効にする
breakpoint.properties.panel.option.depends.leave.enabled=有効にする
breakpoint.properties.panel.option.depends.on=それに依存する：
breakpoint.properties.panel.option.instance.filters=インスタンスフィルタ：
breakpoint.properties.panel.option.log.expression=評価された式を記録する
breakpoint.properties.panel.option.log.message=メッセージをコンソールに記録する
breakpoint.properties.panel.option.pass.count=パスカウント：
breakpoint.properties.panel.option.suspend.all=すべて
breakpoint.properties.panel.option.suspend.default=デフォルトにする
breakpoint.properties.panel.option.suspend.none=なし
breakpoint.properties.panel.option.suspend.thread=糸
breakpoint.property.name.class.filters=クラスフィルタ
breakpoint.property.name.condition=調子
breakpoint.property.name.instance.filters=インスタンスフィルタ：
breakpoint.property.name.log.expression=ログ式
breakpoint.property.name.log.message=ログメッセージ
breakpoint.property.name.pass.count=パスカウント
breakpoint.property.name.suspend.policy=サスペンド
breakpoint.table.header.column.enabled=有効
breakpoint.table.header.column.name=名
breakpoint.tooltip.text=行{0}のブレークポイント
breakpoint.warning=警告：{0}
button.add=追加
button.close.no.mnemonic=閉じる
button.copy=コピー
button.debugger.settings=デバッガの設定...
button.drop.anyway=実行しない
button.evaluate=評価する
button.execute.finally=最後にブロックを実行する
button.flatten.packages=フラットパッケージ
button.group.by.classes=クラスごとにグループ化する
button.group.by.methods=メソッドでグループ化する
button.list.view=リストビュー
button.move.down=下に移動
button.move.up=上に移動
button.remove=削除する
button.save=セーブ
button.switch.view=スイッチビュー
button.tree.view=ツリー表示
class.filters.dialog.exclusion.filters.group=クラス除外フィルタ
class.filters.dialog.inclusion.filters.group=クラスフィルタ
class.filters.dialog.title=クラスフィルタ
debugger.jdi.bootstrap.error={0}。 
debugger.runner.start.action.text=デバッグ
debugger.session.tab.log.content.name=ログ：{0}
debugger.session.tab.threads.title=スレッド
debugger.session.tab.watches.title.with.size=時計（{0}）
default.package.name=<Default>
drop.frame.error.no.information=フレームに関する情報は利用できません
editor.notification.alternative.source=クラス{0}に利用可能な代替ソース
error.absent.exception.breakpoint.class.name=例外ブレークポイントのクラス名がありません
error.array.renderer.configurable.end.index.less.than.start=終了インデックスは開始インデックスより小さい
error.array.renderer.configurable.start.index.less.than.zero=開始インデックスが0より小さい
error.breakpoint.file.not.found=ファイル '' {0} ''が見つかりません。
error.cannot.build.node.children.object.collected=子孫を評価できないため、オブジェクトが収集されました。 
error.cannot.create.expression.from.code.fragment=コードフラグメントから式を作成できません。
error.cannot.create.void.value=void値を作成できません
error.cannot.invoke.method.in.collected.thread=メソッドを呼び出せません：呼び出しスレッドが収集されました
error.cannot.load.breakpoint.file=ファイル '' {0} ''を読み込めません。
error.cannot.open.debugger.port=デバッガポートを開くことができません
error.class.circularity.error=クラス循環エラー：{0}
error.class.def.not.found=クラス定義が見つかりません：{0}
error.class.format.error=クラス形式エラー：{0}
error.class.not.loaded=クラスがロードされていません：{0}
error.context.has.changed=コンテキストが変更され、操作ができません
error.corrupt.debug.info=デバッグ情報が破損している可能性があります：{0}
error.debug.connector.not.found=トランスポート '' {0} ''を使用して接続できません：必要なコネクタが見つかりません。 
error.debug.libraries.missing=デバッグライブラリはJDK home.nからmissigです。デバッガを起動するためには、ライブラリをインストールしてください。http\://java.sun.com/products/jpda
error.debugger.already.listening=デバッガはすでにリスンしています
error.early.return=早期返却中にエラーが発生しました：{0}
error.evaluating.breakpoint.condition.or.action=VMイベントの処理に関する問題：
error.exception.while.connecting=リモートプロセスに接続中にエラーが発生しました。
error.exception.while.reloading=クラスの再読み込み中の例外：{0}：{1}
error.executing.finally=finallyブロックの実行中にエラーが発生しました：{0}
error.failed.evaluating.breakpoint.condition=ブレークポイント条件の評価に失敗しました
error.field.breakpoint.class.name.not.specified=ウォッチポイントを追加できません：クラス名が指定されていません
error.field.breakpoint.class.sources.not.found='' {0}。{1} ''のフィールドウォッチポイントを作成できません。
error.field.breakpoint.field.name.not.specified=ウォッチポイントを追加できません：フィールド名が指定されていません
error.field.breakpoint.field.not.found='' {0}。{1} ''のフィールドウォッチポイントを作成できません。
error.field.not.found.in.class={1}にそのようなフィールド{0}はありません
error.inconsistent.debug.info=一貫性のないデバッグ情報
error.invalid.argument={0,choice, 1\#Invalid argument|2\#Invalid arguments} 
error.invalid.breakpoint.bad.line.number=行番号が無効です
error.invalid.breakpoint.method.not.found=クラス{0}にメソッドが見つかりません
error.invalid.breakpoint.missing.field.in.class=クラス '' {1} ''のフィールド '' {0} ''を見つけることができません
error.invalid.breakpoint.no.executable.code=クラス{1}の{0}行に実行可能コードが見つかりません
error.invalid.breakpoint.source.changed=ソースファイルが変更されたか、ソースファイルがブレークポイントのファイルに対応していません
error.invalid.breakpoint.source.not.found=プロジェクトのクラスパスにあるクラス{0}には、関連するソースファイルがありません
error.invalid.field.name=無効なフィールド名 '' {0} ''
error.invalid.jdk.home=無効なJDKホームディレクトリが指定されています。{0}
error.invalid.local.variable.name=無効なローカル変数名 '' {0} ''
error.invalid.stackframe=内部例外 - 無効なスタックフレーム
error.invalid.type.name=無効な型名 '' {0} ''
error.io.error=I / Oエラー
error.jdk.not.specified=JDKは指定されていません
error.modification.watchpoints.not.supported=ターゲットVMは変更ウォッチポイントをサポートしていません
error.native.method.exception=フレームを通過するフレームおよびフレームを含むフレームはいずれもネイティブではありません
error.no.debug.attach.port=不特定のポートに接続する
error.no.debug.listen.port=指定されていないときにリスンするポート
error.no.shmem.address=共有メモリアドレスが不特定
error.operation.canceled=操作がキャンセル
error.operation.not.supported.by.vm=VMでサポートされていない操作
error.pop.bottom.stackframe=下枠をポップできません
error.pop.stackframe=スタックフレームをポップ中にエラーが発生しました：{0}
error.running.to.cursor.no.executable.code={0}には実行可能コードがありません：{1}
error.text.invalid.port=ポートが指定されていません
error.threads.export.dialog.file.already.exists=ファイル
error.threads.export.dialog.file.is.directory=指定されたファイルはディレクトリです。
error.unable.to.evaluate.capture.expression=キャプチャキー式を評価できません：{0}
error.unable.to.evaluate.expression=式を評価できません
error.unable.to.evaluate.insert.expression=挿入キー式を評価できません：{0}
error.unknown.host=リモートプロセスに接続できません。ホストは不明です
error.unsupported.class.version=サポートされていないクラスのバージョン：{0}
error.unsupported.jdk.version=JDK {0}ではデバッグがサポートされていません
error.verification.error=確認エラー：{0}
error.vm.disconnected=VMが切断されました。
evaluate.expression.dialog.title=式の評価
evaluate.statement.dialog.title=コード断片評価
evaluation.error.anonymous.class.evaluation.not.supported=匿名クラスの評価はサポートされていません
evaluation.error.array.collected=配列が収集されました
evaluation.error.array.dimention.numeric.value.expected=配列次元として期待される数値
evaluation.error.array.reference.expected=配列リファレンスが必要です
evaluation.error.array.type.expected=予想される配列タイプ
evaluation.error.boolean.condition.expected=''ブール値 ''の値は条件で期待されます
evaluation.error.boolean.expected=期待されるブール値
evaluation.error.boolean.value.expected.in.condition=条件で 'ブール値'が必要です
evaluation.error.cannot.cast.boolean=ブール値を '' {0} ''にキャストできません
evaluation.error.cannot.cast.char=char値を '' {0} ''にキャストできません
evaluation.error.cannot.cast.null='' {0} ''にnullをキャストできません
evaluation.error.cannot.cast.numeric='' {0} ''に数値をキャストできません
evaluation.error.cannot.cast.object='' {0} ''を '' {1} ''にキャストできません
evaluation.error.cannot.evaluate.array.initializer=配列の初期化子を評価できません
evaluation.error.cannot.evaluate.class.type=クラスの型を評価できません
evaluation.error.cannot.evaluate.qualifier=修飾子 '' {0} 'を評価できません
evaluation.error.cannot.evaluate.tostring=。{0} .toString（）を評価できません。
evaluation.error.cannot.find.stackframe.source=現在のスタックフレームのソースクラスを見つけることができません
evaluation.error.cannot.initialize.array=配列を初期化できません
evaluation.error.cannot.resolve.class=クラス '' {0} 'を解決できません
evaluation.error.cannot.resolve.constructor=コンストラクタ '' {0} ''を解決できません
evaluation.error.cannot.resolve.field.class=フィールド '' {0} ''を含むクラスを解決できません
evaluation.error.cannot.sources.for.field.class=フィールド '' {0} 'を含むクラスのソースを見つけることができません
evaluation.error.class.not.loaded=クラス '' {0} ''がロードされていません
evaluation.error.class.or.array.expected=フィールド '' {0} 'を評価しているときにクラスまたは配列の型が必要です
evaluation.error.debug.info.unavailable=デバッグ情報が利用できない
evaluation.error.empty.code.fragment=コードフラグメントが必要です
evaluation.error.evaluating.field=フィールドの評価エラー： '' {0} ''
evaluation.error.evaluating.method=メソッドの評価エラー： '' {0} ''
evaluation.error.identifier.expected='' {0} 'の代わりに識別子が必要です
evaluation.error.incompatible.array.initializer.type=イニシャライザの型は配列のコンポーネント型と代入互換ではありません
evaluation.error.incompatible.types='' {0} ''操作の互換性のない型
evaluation.error.incompatible.variable.initializer.type='' {0} ''の初期化子に互換性のない型があります
evaluation.error.inconsistent.debug.info=デバッグ情報に矛盾があります
evaluation.error.integer.expected=期待される整数値
evaluation.error.invalid.array.dimension.expression=配列次元の式が無効です：{0}
evaluation.error.invalid.array.size=無効な配列サイズ
evaluation.error.invalid.expression=無効な式：{0}
evaluation.error.invalid.index.expression=無効なインデックス式
evaluation.error.invalid.this.expression='' {0} ''を '' {1} '' '' '' ''に置き換えることはできません
evaluation.error.invalid.type.name=無効なタイプ名： '' {0} ''
evaluation.error.lambda.evaluation.not.supported=ラムダ評価はサポートされていません
evaluation.error.lebeled.loops.not.found=ラベル '' {0} ''でラベルされたループ文はありません
evaluation.error.local.variable.declarations.not.supported=ローカル変数の宣言はここではサポートされていません。
evaluation.error.local.variable.missing=ローカル変数 '' {0} 'を見つけることができません
evaluation.error.local.variable.missing.from.class.closure=ローカル変数 '' {0} ''がクラスクロージャに見つかりません
evaluation.error.method.exception=メソッドが '' {0} ''例外をスローしました。
evaluation.error.method.not.found=メソッド '' {0} ''が見つかりません
evaluation.error.method.reference.evaluation.not.supported=メソッド参照評価はサポートされていません
evaluation.error.multi.dimensional.arrays.creation.not.supported=サポートされていない多次元配列の作成
evaluation.error.nested.evaluation=評価は別の方法の評価中はサポートされていません
evaluation.error.no.instance.field=そのようなインスタンスフィールドはありません： '' {0} ''
evaluation.error.no.instance.method=そのようなインスタンスメソッドはありません： '' {0} ''
evaluation.error.no.stackframe=評価できません：スタックフレームが利用できません
evaluation.error.no.static.field=そのような静的フィールドはありません： '' {0} ''
evaluation.error.no.static.method=そのような静的メソッドはありません： '' {0} ''
evaluation.error.not.lvalue=割り当ての左部分は左辺値ではありません
evaluation.error.not.rvalue=代入の右部分は値ではありません
evaluation.error.numeric.expected=期待される数値
evaluation.error.object.collected=オブジェクトが収集された
evaluation.error.object.reference.expected=オブジェクト参照が必要です
evaluation.error.objref.expected={0}の代わりにオブジェクト参照が必要です
evaluation.error.operation.not.supported=操作 '' {0} ''はサポートされていません
evaluation.error.process.exited=評価できません：プロセスが終了しました
evaluation.error.qualifier.type.unknown='' {0} ''の型が不明です
evaluation.error.reference.type.expected=参照型が必要です
evaluation.error.sources.out.of.sync=ソースは実行されているコードに対応していません
evaluation.error.stack.frame.unavailable=スタックフレームを使用できません
evaluation.error.statement.not.supported=ステートメント '' {0} ''はサポートされていません
evaluation.error.surrounded.expression.null=囲まれた式がnullです
evaluation.error.this.not.avalilable=「これ」は利用できません
evaluation.error.thread.collected=スレッドが収集されました
evaluation.error.thread.not.at.breakpoint=評価できません：スレッドはブレークポイントで一時停止していません
evaluation.error.thread.resumed=スレッドが再開されました
evaluation.error.type.mismatch=型の不一致
evaluation.error.unknown.expression.operand=式オペランド不明：{0}
evaluation.error.unknown.expression.type=式の型が不明：{0}
evaluation.error.unknown.method.return.type=メソッドの戻り値の型を解決できません：{0}
evaluation.error.unsupported.declaration=無効な宣言：{0}ローカル変数宣言だけがサポートされています。
evaluation.error.unsupported.expression.type=サポートされていない式の種類
evaluation.error.variable.already.declared=変数 '' {0} ''は既に宣言されています
evaluation.error.variable.not.declared=変数 '' {0} ''は宣言されていません
exception.breakpoint.console.message=例外 '{0}'は{1}（{2}：{3、number、＃}）で発生しました
exception.breakpoint.console.message.with.thread.info={2}（{3}：{4、number、＃}）のスレッド '' {1} ''で例外 '' {0} 'が発生しました
exception.breakpoints.tab.title=Java例外ブレークポイント
export.dialog.copy.action.description=テキストをクリップボードにコピーする
export.threads.stackframe.format={0}（{1}：{2、数、＃}）で
field.watchpoints.tab.title=Javaフィールドウォッチポイント
frame.panel.frames.not.available=一時停止されていないスレッドでは使用できないフレーム
get.jpda.dialog.title=行方不明のJPDAライブラリ
hotswap.dialog.hang.question=とにかく変更されたクラスをリロードしますか？
hotswap.dialog.hang.warning=JVMは現在中断されています。
hotswap.dialog.run.prompt=一部のクラスが変更されました。
hotswap.dialog.title=変更されたクラスをリロードする
hotswap.dialog.title.with.session={0}の変更されたクラスをリロードする
instance.filters.dialog.instance.filters.group=インスタンスフィルタ
instance.filters.dialog.title=インスタンスフィルタ
internal.error.locations.of.line='' {0} ''からのデバッグ情報のロード中に内部エラーが発生しました。
label.add.field.breakpoint.dialog.field.name=フィールド名：
label.add.field.breakpoint.dialog.fq.name=クラスの完全修飾名：
label.array.renderer.configurable.end.index=終了インデックス：
label.array.renderer.configurable.max.count1=最大表示
label.array.renderer.configurable.max.count2=配列要素
label.array.renderer.configurable.start.index=配列開始インデックス：
label.base.renderer.configurable.all.overriding='toString（）'メソッドをオーバーライドするすべてのクラス
label.base.renderer.configurable.alternate.view=Collectionsクラスの代替ビューを有効にする
label.base.renderer.configurable.autoscroll=新しいローカル変数への自動スクロール
label.base.renderer.configurable.classes.from.list=リストのクラスの場合：
label.base.renderer.configurable.enable.toString='toString（）'オブジェクトビューを有効にする：
label.base.renderer.configurable.hide.null.array.elements=ヌル配列要素を非表示にする
label.base.renderer.configurable.show.declared.type=宣言された型
label.base.renderer.configurable.show.fq.names=完全修飾名
label.base.renderer.configurable.show.hex.value=プリミティブの16進値を表示する
label.base.renderer.configurable.show.object.id=オブジェクトID
label.base.renderer.configurable.show.static.fields=静的フィールド
label.base.renderer.configurable.show.static.final.fields=静的最終フィールド
label.base.renderer.configurable.show.strings.type=文字列の表示タイプ
label.base.renderer.configurable.show.synthetic.fields=合成フィールド
label.base.renderer.configurable.show.val.fields.as.locals=ローカル変数としての$ valフィールド
label.base.renderer.configurable.sort.alphabetically=アルファベット順にソート
label.breakpoint.properties.panel.group.actions=行動
label.breakpoint.properties.panel.group.conditions=フィルタ
label.breakpoint.properties.panel.group.suspend.policy=サスペンドポリシー
label.capture.configurable.capture.variables=ローカル変数をキャプチャする（実行速度を大幅に低下させる可能性があります）
label.class.label.expression.configurable.node.label=ノードラベル式
label.complete.input.dialog.expression=式を入力してください
label.compound.renderer.configurable.append.default.children=デフォルトの子を追加する
label.compound.renderer.configurable.apply.to=型のオブジェクト（完全修飾名）にレンダラーを適用する：
label.compound.renderer.configurable.show.type=タイプとオブジェクトIDを表示する
label.compound.renderer.configurable.table.header.expression=式
label.compound.renderer.configurable.table.header.name=名
label.compound.renderer.configurable.test.can.expand=ノードを展開できるかどうかをテストします（オプション）。
label.compound.renderer.configurable.use.default.renderer=デフォルトのレンダラーを使用する
label.compound.renderer.configurable.use.expression=次の式を使用します。
label.compound.renderer.configurable.use.expression.list=表現のリストを使用する：
label.compound.renderer.configurable.when.expanding=ノードを拡張するとき
label.compound.renderer.configurable.when.rendering=ノードをレンダリングするとき
label.debugger.general.configurable.evaluate.finally.always=常に
label.debugger.general.configurable.evaluate.finally.ask=尋ねる
label.debugger.general.configurable.evaluate.finally.never=絶対に
label.debugger.general.configurable.evaluate.finally.on.pop=最終的にポップフレームと早期リターンのブロックを評価する：
label.debugger.general.configurable.kill.immediately=すぐにデバッグプロセスを終了する
label.debugger.general.configurable.resume.only.current.thread=現在のスレッドのみを再開する
label.debugger.general.configurable.show.alternative.source=代替ソーススイッチャーを表示する
label.debugger.general.configurable.skip.classLoaders=クラスローダーをスキップする
label.debugger.general.configurable.skip.constructors=コンストラクタをスキップする
label.debugger.general.configurable.skip.simple.getters=シンプルゲッターをスキップする
label.debugger.general.configurable.skip.synthetic.methods=合成メソッドをスキップする
label.debugger.general.configurable.step.filters.list.header=クラスに入ってはいけない
label.debugger.hotswap.configurable.always=常に
label.debugger.hotswap.configurable.ask=尋ねる
label.debugger.hotswap.configurable.compile.before.hotswap=クラスをリロードする前にプロジェクトをビルドする
label.debugger.hotswap.configurable.enable.vm.hang.warning=「JVMはハングする」警告を有効にする
label.debugger.hotswap.configurable.hotswap.background=バックグラウンドでクラスを再読み込みする
label.debugger.hotswap.configurable.never=絶対に
label.debugger.hotswap.configurable.reload.classes=コンパイル後にクラスをリロードする：
label.debugger.launching.configurable.debugger.transport=輸送：
label.debugger.launching.configurable.disable.jit=JITを無効にする
label.debugger.launching.configurable.force.classic.vm=JDK 1.3.x以前の場合はClassic VMを強制する
label.debugger.launching.configurable.shmem=共有メモリ
label.debugger.launching.configurable.socket=ソケット
label.evaluate.dialog.expression=式：
label.evaluate.dialog.language=言語：
label.evaluate.dialog.result=結果：
label.evaluation.dialog.statements=評価するステートメント：
label.exception.breakpoint.properties.panel.caught.exception=キャッチ例外
label.exception.breakpoint.properties.panel.group.notifications=通知
label.exception.breakpoint.properties.panel.uncaught.exception=捕捉されなかった例外
label.filed.breakpoint.properties.panel.field.access=フィールドアクセス
label.filed.breakpoint.properties.panel.field.modification=フィールドの変更
label.generic.debugger.parameters.patcher.configurable.port=ポート：
label.generic.debugger.parameters.patcher.configurable.shmem=共有メモリ
label.generic.debugger.parameters.patcher.configurable.shmem.address=共有メモリアドレス：
label.generic.debugger.parameters.patcher.configurable.socket=ソケット
label.generic.debugger.parameters.patcher.configurable.transport=輸送：
label.get.jpda.dialog.error.description=デバッガを起動できません：JDKホームにデバッグライブラリがありません
label.get.jpda.dialog.prompt=JPDAライブラリを入手するには
label.group.watch.events=時計
label.method.breakpoint.properties.panel.emulated=エミュレートされた
label.method.breakpoint.properties.panel.method.entry=メソッドエントリ
label.method.breakpoint.properties.panel.method.exit=メソッド終了
label.method.breakpoints.processing.classes=エミュレートされたメソッドブレークポイントのクラスの処理
label.method.breakpoints.setting.breakpoints=エミュレートされたメソッドブレークポイントの設定
label.named.children.configurable.node.descendants=ノード子孫：
label.named.children.configurable.table.header.column.expression=式
label.named.children.configurable.table.header.column.name=名
label.node.descendands.expression=ノード降下式：
label.thread.group.node=スレッドグループ "{0}" @ {1}
label.thread.group.node.group.collected=スレッドグループ "{0}"がガベージコレクションされました
label.thread.node="{0}" @ {1}：{2}
label.thread.node.in.group=グループ "{3}"の "{0}" @ {1}：{2}
label.thread.node.thread.collected=スレッド '' {0} ''はガベージコレクションされました
label.threads.export.dialog.file=ファイルにエクスポート：
label.threads.view.configurable.current.thread.on.top=現在のスレッドを先頭に移動する
label.threads.view.configurable.show.class.name=クラス名を表示する
label.threads.view.configurable.show.line.number=行番号を表示する
label.threads.view.configurable.show.package=パッケージ名を表示する
label.threads.view.configurable.show.prams.types=メソッド引数の型を表示する
label.threads.view.configurable.show.source.file.name=ソースファイル名を表示する
label.threads.view.configurable.show.stack.frames.for.synthetic.methods=合成メソッドのスタックフレームを表示する
label.threads.view.configurable.show.thread.groups=スレッドグループを表示する
label.undefined=未定義
label.unknown.value=<unknown>
label.user.renderers.configurable.renderer.name=レンダラー名：
line.breakpoint.display.name=行{0}
line.breakpoint.display.name.with.class.or.method={1}の{0、number、＃}行
line.breakpoints.tab.title=Javaラインブレークポイント
message.node.all.array.elements.null=範囲（{0}、{1}）内のすべての要素がnullです
message.node.all.elements.null=すべての要素がnullです
message.node.class.has.no.fields=クラスにはフィールドがありません
message.node.class.no.fields.to.display=表示するフィールドがありません
message.node.debug.info.not.available=デバッグ情報が利用できません
message.node.empty.array=空の
message.node.evaluation.not.possible=ターゲットVMはブレークポイント要求によって一時停止されません。
message.node.local.variables.capture.disabled=ローカル変数は取得されませんでした。
message.node.local.variables.debug.info.not.available=変数のデバッグ情報が利用できません
message.node.local.variables.not.captured=ローカル変数は合成、ブリッジなどのメソッドでは捕捉されません
message.node.navigate=...ナビゲート
message.node.object.collected=メソッド呼び出し中にオブジェクトがガベージコレクションされました
message.node.show.icon=...アイコンを表示
message.node.show.image=...イメージを表示する
message.node.thread.has.no.frames=スレッドにフレームがありません
message.node.thread.running=スレッドが実行中です。
message.remote.jre.version.mismatch=ターゲットJREのバージョン（{0}）
method.breakpoints.slowness.warning=メソッドのブレークポイントがデバッグを大幅に遅くする
method.breakpoints.tab.title=Javaメソッドブレークポイント
node.has.descendands.expression.optional='Node descendands'式（オプション）：
position.highlighter.stripe.tooltip=実行行
progress.evaluating={0}を評価する
progress.hot.swap.title=ホットスワップ
progress.hotswap.reloading=クラスをリロードしています...
progress.hotswap.scanning.classes=リロードするクラスのスキャン...
progress.hotswap.scanning.path=スキャン中：{0}
progress.set.value=設定値...
rule.name.group.by.class=クラスごとにグループ化する
rule.name.group.by.package=パッケージごとにグループ化する
status.app.running=アプリケーションが実行中です。
status.breakpoint.invalid=無効
status.breakpoint.reached.in.thread=スレッド{0}に到達したブレークポイント
status.breakpoint.reached.in.thread.switch=<a href\="\#">Switch thread</a>
status.classes.not.all.versions.reloaded=For {0} of {1} {1,choice, 1\#class|2\#classes} not all versions were reloaded
status.classes.reloaded={0,number} {0,choice, 0\#classes|1\#class|2\#classes} reloaded
status.connect.failed=ターゲットVMへの接続の確立に失敗しました。アドレス「 '{0}' '、トランスポート：' '{1}' '
status.connected=ターゲットVMに接続し、アドレス： '' {0} ''、トランスポート： '' {1} ''
status.connecting=ターゲットVMへの接続、アドレス： '' {0} ''、トランスポート： '' {1} ''
status.debug.stopped=デバッグ停止
status.disconnected=ターゲットVMとの接続が切断されました。アドレス： '' {0} ''、トランスポート： '' {1} ''
status.exception.breakpoint.reached=例外ブレークポイントに達しました
status.exception.breakpoint.reached.details=スレッド '' {1} ''の例外 '' {0} ''
status.field.watchpoint.reached=フィールドウォッチポイントに達しました
status.field.watchpoint.reached.access='{' {0 }@{5}'} '{1}は{2}（{3}：{4、number、＃}）でアクセスされます
status.field.watchpoint.reached.modification='{' {0 }@{7}'}'{{1}は{4}（{5}：{6、number、＃}）で修正されます。
status.generic.breakpoint.reached=ブレークポイントに達しました
status.hot.swap.completed.restart=<a href\="restart">Restart debug session</a>
status.hot.swap.completed.stop=<a href\="stop">Stop debug session</a>
status.hot.swap.completed.with.errors=ホットスワップに失敗しました。
status.hot.swap.completed.with.warnings=ホットスワップは警告付きで完了しました
status.hotswap.loaded.classes.up.to.date=ロードされたクラスは最新です。
status.hotswap.uptodate=ロードされたクラスは最新です。
status.invalid.breakpoint.out.of.class=ブレークポイントはどのクラスにも属していません
status.line.breakpoint.reached=ブレークポイントが{0}に達しました（{1}：{2、数、＃}）
status.line.breakpoint.reached.full.trace=ブレークポイントが{0}に達しました
status.listening=接続を聞いて、アドレス： '' {0} ''、輸送： '' {1} ''
status.method.entry.breakpoint.reached={1}（{2}：{3、number、＃}）にメソッド "{0}"を入力しました
status.method.exit.breakpoint.reached=メソッドのブレークポイントに達しました。
status.paused=一時停止中
status.paused.in.another.thread=別のスレッドで一時停止
status.process.resumed=プロセスが再開されました
status.process.started=プロセス開始
status.process.terminated=プロセスが終了しました
status.run.to.cursor=カーソルまで実行
status.static.field.watchpoint.reached.access={0}。{1}は{2}（{3}：{4、number、＃}）でアクセスされます
status.static.field.watchpoint.reached.modification={0}。{1}は{4}（{5}：{6、number、＃}）で修正されます。
status.step.into=踏み込む
status.step.out=踏み出す
status.step.over=足踏み
status.stopped.at.cursor=カーソルで停止しました
status.thread.blocked.by=スレッド{0}のステッピングはスレッド{1}によってブロックされています
status.thread.blocked.by.resume=<a href\="\#">Resume {0}</a>
status.thread.monitor=モニター
status.thread.not.started=始まっていない
status.thread.running=ランニング
status.thread.sleeping=睡眠
status.thread.undefined=未定義
status.thread.unknown=未知の
status.thread.wait=待つ
status.thread.zombie=ゾンビ
status.waiting.attach=デバッガはアプリケーションの起動を待機しています。
status.waiting.evaluation.result=最後のデバッガコマンドが完了するまで待つ
string.debugger.runner.description=選択した設定をデバッグする
string.file.line.position={0}のクラス：{1}
string.null.context=ヌルコンテキスト
text.base.renderer.configurable.no.class.patterns=クラスパターンが設定されていません
text.user.renderers.configurable.no.renderers=レンダラなし
threads.export.attribute.error.incompatible.state=互換性のないスレッド状態：スレッドが中断されていない
threads.export.attribute.label.blocks.thread=ブロック{0}
threads.export.attribute.label.daemon=デーモン
threads.export.attribute.label.group=グループ '' {0} ''
threads.export.attribute.label.locked=ロックされた{0}
threads.export.attribute.label.nid=nid \= {0}
threads.export.attribute.label.object-id=<0x{0}> (a {1})
threads.export.attribute.label.priority=prio \= {0}
threads.export.attribute.label.status=ステータス： '' {0} ''
threads.export.attribute.label.tid=tid \= 0x {0}
threads.export.attribute.label.waiting.for.thread={0}が{1}のロックを解除するのを待っています
threads.export.dialog.title=スレッドのエクスポート
threads.view.configurable.display.name=スレッドビューをカスタマイズする
title.compound.renderer.configurable.choose.renderer.reference.type=レンダラ参照型
title.customize.data.views=データビューのカスタマイズ
title.error.evaluating.breakpoint.action=ブレークポイントアクションエラー
title.error.evaluating.breakpoint.condition=ブレークポイント条件エラー
title.evaluating=評価中...
title.jdk140.unstable=VMバージョン警告
title.range.too.big=範囲が大きすぎます
title.set.value=設定値
title.smart.step.popup=ステップインする方法
transport.name.shared.memory=共有メモリ
transport.name.socket=ソケット
user.renderers.configurable.button.description.add=新しいレンダラーを追加する
user.renderers.configurable.button.description.copy=選択したレンダラーをコピーする
user.renderers.configurable.button.description.move.down=レンダラーを下に移動
user.renderers.configurable.button.description.move.up=レンダラーを移動する
user.renderers.configurable.button.description.remove=選択したレンダラーを削除する
user.renderers.configurable.display.name=Java型レンダラー
value.none=<None>
warning.finally.block.detected=非空の最終ブロックが検出されました：
warning.hotswap.ignored.breakpoints=旧バージョンのメソッドのブレークポイントは無視されます
warning.jdk140.unstable=デバッグVMのバージョンは「1.4.0」です。
warning.range.too.big=指定された範囲が大きすぎます。 
warning.recalculate=値が再計算されます。
warning.source.code.not.match=ソースコードがバイトコードと一致しません
watchs.add.text=腕時計に追加
