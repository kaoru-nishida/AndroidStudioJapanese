#AndroidStudio3.1 \u65E5\u672C\u8A9E\u5316\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8
#Tue Nov 21 21:52:20 JST 2017
SearchEverywhere=どこからでも検索
ant.quickfix.CreateProperty=プロパティタグを作成する
ant.quickfix.CreateTarget=ターゲットタグを作成する
codeassists.comment.block=コメント/コメント解除ブロック
codeassists.comment.line=現在の行のコメント/コメント解除
codeassists.complete.statement=完全な声明
codeassists.highlight.implements=メンバーの実装またはオーバーライドをハイライトする
codeassists.highlight.return=メソッドの終了点を強調表示する
codeassists.highlight.throws=ハイライトメソッドがスローする
codeassists.javadoc.external=外部ドキュメントを参照
codeassists.overrideimplement=オーバーライド/実装メソッド
codeassists.quickdefinition=クイック定義の検索
codeassists.quickdefinition.lookup=検索リストのクイック定義
codeassists.quickjavadoc=クイックドキュメントのポップアップ
codeassists.quickjavadoc.ctrln=gotoクラスまたはシンボルのクイックドキュメント
codeassists.quickjavadoc.lookup=ルックアップのクイックドキュメント
codeassists.surroundwith.expression=サラウンドエクスプレッション
codeassists.surroundwith.statement=でのサマリーステートメント
dir.diff=ディレクトリ差分
editing.add.carets.using.double.ctrl=複数のキャレット
editing.completion.basic=基本的なコード補完
editing.completion.camelHumps=コード完成時のキャメル接頭辞
editing.completion.cancelByControlArrows=エディタでルックアップをキャンセルし、キャレットを上下に移動する
editing.completion.changeSorting=完了バリアントのソートの変更
editing.completion.completeStatement=コード補完からの完全なステートメント
editing.completion.finishByControlEnter=焦点が合っていなくてもルックアップを完了
editing.completion.finishByCtrlDot=Ctrl + Dotでルックアップを終了する
editing.completion.finishByDotEtc=特殊文字による検索を終了する
editing.completion.finishByExclamation=感嘆符で検索を終了する
editing.completion.finishBySmartEnter=スマート入力で検索を終了
editing.completion.global.member.name=グローバルメソッド名コード補完
editing.completion.postfix=Postfixの完了
editing.completion.replace=ルックアップを使用するときに置換
editing.completion.second.basic=2番目の基本的な完了
editing.completion.second.smarttype.array.member=2番目のスマートタイプの完了：配列メンバーへのアクセス
editing.completion.second.smarttype.aslist=2番目のスマートタイプの完了：asList（）の変換
editing.completion.second.smarttype.chain=2番目のスマートタイプの補完：チェーンメソッド呼び出し
editing.completion.second.smarttype.toar=2番目のスマートタイプの完了：toArray（）変換
editing.completion.smarttype.afternew=新しい後のスマートなタイプの補完
editing.completion.smarttype.casting=スマートタイプキャスティング
editing.completion.smarttype.general=スマートタイプの完成
editing.completion.variable.name=変数名の補完
editing.incremental.search=エディタの増分検索
editing.select.word=構文認識選択
editor.delete.line=エディタの削除行
feature.statistics.action.close=閉じる
feature.statistics.action.next.tip=次のヒント
feature.statistics.action.prev.tip=前のヒント
feature.statistics.application.idle.time=アイドル時間：{0}
feature.statistics.application.uptime={0}稼働時間：{1}
feature.statistics.column.feature=特徴
feature.statistics.column.group=グループ
feature.statistics.column.last.used=最後に使用された
feature.statistics.column.usage.count=中古
feature.statistics.column.usage.frequency=平均使用頻度
feature.statistics.dialog.title=生産性ガイド
feature.statistics.floating.window.title=生産性のヒント
feature.statistics.not.applicable=N / A
feature.statistics.show.on.startup=起動時やその他の長いプロセスでの生産性のヒントを表示する
feature.statistics.show.while.compiling=コンパイル中に生産性のヒントを表示する
feature.statistics.usage.count={0,choice, 0\#Never|1\#Once|2\#Twice|3\#{0,number} times}
feature.statistics.welcome.tip.name=生産性機能ガイド
features.statistics.keep.hints.window=プロセスが終了したらヒントウィンドウを開いたままにする
find.completion=検索バーでの完了
find.recent.search=最近の検索履歴
group.ant=Antサポート機能
group.codeassists=コードアシスタント
group.completion=コード補完
group.diff=比較ツール
group.editing=コード編集
group.navigation=ナビゲーション
group.refactoring=リファクタリング
group.tools=ツールサポート
group.ui=UIのユーザビリティ機能
jar.diff=JARファイル差分
move.element.left.right=コード要素を左右に移動
navigation.goto.declaration=宣言に行く
navigation.goto.implementation=実装に進む
navigation.goto.inspection=点検に行く
navigation.goto.usages=用途を表示
navigation.popup.action=行動に移る
navigation.popup.camelprefix=ナビゲーションポップアップでラクダ言葉接頭辞を使用する
navigation.popup.class=授業に行く
navigation.popup.file=ファイルに移動
navigation.popup.file.structure=ファイル構造のポップアップ
navigation.popup.symbol=シンボルに行く
navigation.popup.wildcards=go to class、ファイル、シンボルにワイルドカードを使用する
navigation.recent.files=最近のファイルのポップアップ
navigation.select.in=ポップアップで選択
refactoring.copyClass=クラスリファクタリングのコピー
refactoring.introduceVariable=可変リファクタリングの導入
refactoring.introduceVariable.incompleteStatement=変数を導入すると、変数をすばやく宣言できます。
refactoring.move.moveInner=内部クラスを上位レベルに移動する
refactoring.rename=名前を変更する
scratch=新しいスクラッチファイル
switcher=スイッチャー
ui.horizontal.scrolling=水平スクロール
ui.recentchanges=最近の変化
ui.scheme.quickswitch=クイックスイッチ方式...
ui.tree.speedsearch=木でのスピード検索
